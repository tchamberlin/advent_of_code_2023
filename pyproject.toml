[project]
name = "advent_of_code_2023"
version = "1.0"
description = ''
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = []
authors = [
  { name = "Thomas Chamberlin" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.optional-dependencies]
all = ["pytest"]

[project.urls]
Documentation = "https://github.com/tchamberlin/advent_of_code_2023/#readme"
Issues = "https://github.com/tchamberlin/advent_of_code_2023/issues"
Source = "https://github.com/tchamberlin/advent_of_code_2023/"


[tool.hatch.envs.default]
dependencies = []


[tool.hatch.envs.lint]
detached = true
dependencies = [
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "pyright {args:.}"
style = [
  "ruff {args:.}",
  "ruff format {args:.}",
]
format-unsafe = [
  "ruff --fix {args:.} --unsafe-fixes",
  "style",
]
format = [
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]


[tool.ruff]
target-version = "py312"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "D",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  "S101",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Allow print
  "T201",
  "ISC001",
  "D400", "D415",  # Don't care about periods
  "D203",
  "D213",
  "D104"
]
unfixable = []

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"test*" = ["PLR2004", "S101", "TID252", "D"]

[tool.ruff.isort]
known-first-party = []

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.pytest.ini_options]
testpaths = ["day*"]

[tool.pyright]
include = ["day*"]
pythonVersion = "3.12"
pythonPlatform = "Linux"
reportUnknownParameterType = true
reportUntypedFunctionDecorator = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
